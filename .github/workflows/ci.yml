name: CI

on: push

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install poetry
        uses: dschep/install-poetry-action@v1.3
      - name: Cache poetry venv
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Config poetry
        run: poetry config virtualenvs.in-project true
      - name: Install dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Test with pytest
        run: poetry run pytest

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install poetry
        uses: dschep/install-poetry-action@v1.3
      - name: Cache poetry venv
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Config poetry
        run: poetry config virtualenvs.in-project true
      - name: Install dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Lint with flake8
        run: poetry run flake8 .
      - name: Lint with pydocstyle
        run: poetry run pydocstyle .
      - name: Code quality check
        run: poetry run black . --check
